---
- name: Ensure development packages and libraries are installed
  apt:
    state: latest
    pkg: "{{ item }}"
  loop:
    - build-essential
    - gcc
    - git
    - gitk
    - golang
    - httpie
    - jq
    - make
    - pipx
    - python3-venv
    - shellcheck
    - shfmt
    - universal-ctags
  loop_control:
    label: "{{ item }}"

- name: install development tools
  community.general.pipx:
    state: latest
    name: "{{ item }}"
    install_deps: true
  loop:
    - bandit
    - black
    - flake8
    - glances
    - pre-commit
    - pytest
    - ruff
    - uv
    - yamlfmt
    - yamllint
  become: false

- name: Check if pipx path is present
  shell: test -d ~/.local/bin && echo "Pipx ensurepath executed" || echo "Pipx ensurepath not executed"
  register: pipx_ensurepath_output
  changed_when: false
  ignore_errors: true
  become: false

- name: Execute pipx ensurepath, if required
  command: pipx ensurepath
  when: pipx_ensurepath_output.rc != 0
  become: false


- name: Ensure pyenv is installed
  ansible.builtin.debug:
    msg: |
      Pyenv will be installed, via equivalent of:
      curl -fsSL https://pyenv.run | bash

      reference url: https://github.com/pyenv/pyenv

- name: Download pyenv installer script
  get_url:
    url: https://pyenv.run
    dest: "{{ home_dir }}/pyenv-installer.sh"
    mode: '0755'
  become: false

- name: Run pyenv installer script
  ansible.builtin.shell: |
    bash "{{ home_dir }}/pyenv-installer.sh"
  args:
    creates: "{{ home_dir }}/.pyenv"
    executable: /bin/bash
  environment:
    HOME: "{{ home_dir }}"
  become: false

- name: Remove pyenv installer script
  file:
    path: "{{ home_dir }}/pyenv-installer.sh"
    state: absent
  become: false

- name: pyenv information message
  ansible.builtin.debug:
    msg: |
      Pyenv has been installed successfully.

      The following will be added to your ~/.bashrc environment via env role in this playbook:

        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv init -)"

      Then restart your shell or run: exec "$SHELL"
